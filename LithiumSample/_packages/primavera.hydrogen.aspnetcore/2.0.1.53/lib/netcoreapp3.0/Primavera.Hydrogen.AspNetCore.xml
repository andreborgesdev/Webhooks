<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Primavera.Hydrogen.AspNetCore</name>
    </assembly>
    <members>
        <member name="T:Primavera.Hydrogen.AspNetCore.Configuration.ConfigurationAnalyzerIEndpointRouteBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to configure the configuration analyzer.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.ConfigurationAnalyzerIEndpointRouteBuilderExtensions.MapConfigurationAnalyzer(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)">
            <summary>
            Maps the specified configuration analyzer route.
            The route will respond to <see cref="P:System.Net.Http.HttpMethod.Get"/> requests an return a JSON containing
            all the configuration settings.
            </summary>
            <param name="builder">The endpoint route builder instance.</param>
            <param name="route">The route that should be used.</param>
            <returns>
            The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> instance.
            </returns>
            <example>
            This method should be invoked like this:
            <code>
            <![CDATA[
            app.UseEndpoints(
                endpoints =>
                {
                    // (...)
            
                    endpoints.MapConfigurationAnalyzer();
                });
            app.UseEndpoints(
                endpoints =>
                {
                    // (...)
            
                    endpoints.MapConfigurationAnalyzer("/my-route");
                });
            ]]>
            </code>
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService">
            <summary>
            Defines the base class for a generic background service.
            A background service should be registered, during application startup, as a <see cref="T:Microsoft.Extensions.Hosting.IHostedService"/>
            using <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </summary>
            <remarks>
            For more information on hosted services in ASP.NET Core:
            <see href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-3.0"/>.
            </remarks>
            <seealso cref="T:Microsoft.Extensions.Hosting.IHostedService" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.Name">
            <summary>
            Gets the name of the background service.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.ServiceProvider">
            <summary>
            Gets the service provider.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.Logger">
            <summary>
            Gets the logger.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the execution of the background service.
            Triggered when the application host is ready to start the service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method is automatically triggered when the application host is ready to start the service.
            The default implementation ensures that <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)"/> is
            immediately executed.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stops the execution of the background service.
            Triggered when the application host is performing a graceful shutdown.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method is automatically triggered when the application host requests the service to be canceled.
            The default implementation ensures that the execution task is canceled.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the background service.
            </summary>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method is automatically triggered after the background service is started.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceWithWorker`1">
            <summary>
            Defines the base class for a background service that uses a background worker to perform the actual work.
            A background service should be registered, during application startup, as a <see cref="T:Microsoft.Extensions.Hosting.IHostedService"/>
            using <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceWithWorker``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </summary>
            <typeparam name="TWorker">The type of the background worker.</typeparam>
            <remarks>
            For more information on hosted services in ASP.NET Core:
            <see href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-3.0"/>.
            </remarks>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceWithWorker`1.Worker">
            <summary>
            Gets the instance of the background worker that should executed
            by the background service.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceWithWorker`1.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceWithWorker`1" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceWithWorker`1.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorker">
            <summary>
            Defines the base class for a background worker that performs work on behalf of a background service.
            Background workers can be shared between different instances of <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceWithWorker`1"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorker.ServiceProvider">
            <summary>
            Gets the service provider.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorker.Logger">
            <summary>
            Gets the logger.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorker.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorker" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorker.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the worker.
            </summary>
            <param name="cancellationToken">The cancellation token. This token signals that the background worker is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1">
            <summary>
            Defines a background work queue.
            This queue is used to initiate work items of behalf of background services.
            </summary>
            <typeparam name="TWorkItem">The type of work items stored in the queue.</typeparam>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.Count">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.Enqueue(`0)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.DequeueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type
            that allow registering background services.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers a background service of the specified type.
            </summary>
            <typeparam name="TBackgroundService">The type of the background service that should be registered.</typeparam>
            <param name="services">The service collection.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})">
            <summary>
            Registers a background service of the specified type.
            </summary>
            <typeparam name="TBackgroundService">The type of the background service that should be registered.</typeparam>
            <param name="services">The service collection.</param>
            <param name="implementationFactory">The factory function that should be used to create new instances of the background service.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceWithWorker``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers a background service of the specified type.
            </summary>
            <typeparam name="TBackgroundService">The type of the background service that should be registered.</typeparam>
            <typeparam name="TBackgroundWorker">The type of the background worker associated with the background service.</typeparam>
            <param name="services">The service collection.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceWithWorker``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})">
            <summary>
            Registers a background service of the specified type.
            </summary>
            <typeparam name="TBackgroundService">The type of the background service that should be registered.</typeparam>
            <typeparam name="TBackgroundWorker">The type of the background worker associated with the background service.</typeparam>
            <param name="services">The service collection.</param>
            <param name="implementationFactory">The factory function that should be used to create new instances of the background service.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceTimed``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers a timed background service of the specified type.
            </summary>
            <typeparam name="TTimedBackgroundService">The type of the timed background service that should be registered.</typeparam>
            <param name="services">The service collection.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceTimed``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})">
            <summary>
            Registers a timed background service of the specified type.
            </summary>
            <typeparam name="TTimedBackgroundService">The type of the timed background service that should be registered.</typeparam>
            <param name="services">The service collection.</param>
            <param name="implementationFactory">The factory function that should be used to create new instances of the background service.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceTimedWithWorker``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers a timed background service of the specified type.
            </summary>
            <typeparam name="TTimedBackgroundService">The type of the timed background service that should be registered.</typeparam>
            <typeparam name="TBackgroundWorker">The type of the background worker associated with the background service.</typeparam>
            <param name="services">The service collection.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceTimedWithWorker``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})">
            <summary>
            Registers a timed background service of the specified type.
            </summary>
            <typeparam name="TTimedBackgroundService">The type of the timed background service that should be registered.</typeparam>
            <typeparam name="TBackgroundWorker">The type of the background worker associated with the background service.</typeparam>
            <param name="services">The service collection.</param>
            <param name="implementationFactory">The factory function that should be used to create new instances of the background service.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceQueued``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers a queued background service of the specified type.
            </summary>
            <typeparam name="TQueuedBackgroundService">The type of the queued background service that should be registered.</typeparam>
            <typeparam name="TWorkItem">The type of the queue work items.</typeparam>
            <param name="services">The service collection.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceQueued``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})">
            <summary>
            Registers a queued background service of the specified type.
            </summary>
            <typeparam name="TQueuedBackgroundService">The type of the queued background service that should be registered.</typeparam>
            <typeparam name="TWorkItem">The type of the queue work items.</typeparam>
            <param name="services">The service collection.</param>
            <param name="implementationFactory">The factory function that should be used to create new instances of the background service.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceQueuedWithWorker``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers a timed background service of the specified type.
            </summary>
            <typeparam name="TQueuedBackgroundService">The type of the queued background service that should be registered.</typeparam>
            <typeparam name="TBackgroundWorker">The type of the background worker associated with the background service.</typeparam>
            <param name="services">The service collection.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceQueuedWithWorker``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{System.IServiceProvider,``0})">
            <summary>
            Registers a timed background service of the specified type.
            </summary>
            <typeparam name="TQueuedBackgroundService">The type of the queued background service that should be registered.</typeparam>
            <typeparam name="TBackgroundWorker">The type of the background worker associated with the background service.</typeparam>
            <param name="services">The service collection.</param>
            <param name="implementationFactory">The factory function that should be used to create new instances of the background service.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1">
            <summary>
            Defines the interface of a background work queue.
            This queue is used to initiate work items of behalf of background services.
            </summary>
            <typeparam name="TWorkItem">The type of work items stored in the queue.</typeparam>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1.Count">
            <summary>
            Gets the number of work items contained in the queue.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1.Enqueue(`0)">
            <summary>
            Enqueues the execution of a work item.
            </summary>
            <param name="workItem">The work item that should be executed.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1.DequeueAsync(System.Threading.CancellationToken)">
            <summary>
            Dequeues the next work item set for execution.
            Returns null if the operation is canceled.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The work item that should be executed.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1">
            <summary>
            Defines the base class for a queued background service.
            A queued background service executes repeatedly until it is canceled, waiting for a new work item
            to become available in the queue.
            It should be registered, during application startup, as a <see cref="T:Microsoft.Extensions.Hosting.IHostedService"/>
            using <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceQueued``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </summary>
            <typeparam name="TWorkItem">The type of the queue work items.</typeparam>
            <remarks>
            For more information on hosted services in ASP.NET Core:
            <see href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-3.0"/>.
            </remarks>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.Queue">
            <summary>
            Gets the queue that triggers executions of work.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.ExecuteWorkAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Executes the background service work.
            </summary>
            <param name="workItem">The work item.</param>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method is automatically triggered when a new work item becomes available in the queue.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundServiceWithWorker`1">
            <summary>
            Defines the base class for a queued background service that uses a background worker to perform the actual work.
            A queued background service executes repeatedly until it is canceled, waiting for a new work item
            to become available in the queue.
            It should be registered, during application startup, as a <see cref="T:Microsoft.Extensions.Hosting.IHostedService"/>
            using <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceQueuedWithWorker``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </summary>
            <typeparam name="TWorker">The type of the background worker.</typeparam>
            <remarks>
            For more information on hosted services in ASP.NET Core:
            <see href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-3.0"/>.
            </remarks>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundServiceWithWorker`1.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundServiceWithWorker`1" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundServiceWithWorker`1.ExecuteWorkAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService">
            <summary>
            Defines the base class for a timed background service.
            A timed background service executes repeatedly until it is canceled, waiting the specified
            <see cref="P:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.WaitPeriod"/> between executions.
            It should be registered, during application startup, as a <see cref="T:Microsoft.Extensions.Hosting.IHostedService"/>
            using <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceTimed``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </summary>
            <remarks>
            For more information on hosted services in ASP.NET Core:
            <see href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-3.0"/>.
            </remarks>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundService" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.WaitPeriod">
            <summary>
            Gets the amount of time that the background service should wait before
            consecutive executions of work.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.ExecuteWorkAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the background service work.
            </summary>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method is automatically triggered after each <see cref="P:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.WaitPeriod"/> ellapses.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundServiceWithWorker`1">
            <summary>
            Defines the base class for a timed background service that uses a background worker to perform the actual work.
            A timed background service executes repeatedly until it is canceled, waiting the specified
            <see cref="P:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.WaitPeriod"/> between executions.
            It should be registered, during application startup, as a <see cref="T:Microsoft.Extensions.Hosting.IHostedService"/>
            using <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServiceTimedWithWorker``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </summary>
            <typeparam name="TWorker">The type of the background worker.</typeparam>
            <remarks>
            For more information on hosted services in ASP.NET Core:
            <see href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-3.0"/>.
            </remarks>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundServiceWithWorker`1.Worker">
            <summary>
            Gets the instance of the background worker that should executed
            by the background service.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundServiceWithWorker`1.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundServiceWithWorker`1" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundServiceWithWorker`1.ExecuteWorkAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase">
            <summary>
            Defines the base class for API controllers which should be used for any controller that is part of a Web API to ensure
            standard behavior (see remarks).
            </summary>
            <remarks>
            This base class ensures the following behaviors:
            (1) Adds the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/> attribute to the controller, which in turns ensures things like attribute
            routing.
            (2) Provides an instance of <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> to validate the input of actions.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase.Validate">
            <summary>
            Initializes a new validator.
            </summary>
            <returns>The new <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions">
            <summary>
            Defines the configuration options used to configure the API controllers by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>
            extension methods.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseVersioning">
            <summary>
            Gets or sets a value indicating whether the API should use versioning.
            The default value is true.
            </summary>
            <remarks>
            API versioning is enabled by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)"/>
            extension methods.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.DefaultApiVersion">
            <summary>
            Gets or sets the default API version, meaningful only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseVersioning"/> is true.
            The default value is 1.0.
            </summary>
            <remarks>
            API versioning is enabled by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)"/>
            extension methods.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.DisableModelInvalidResponse">
            <summary>
            Gets or sets a value indicating whether the automatic response from the MVC infrastructure when
            the model state is invalid (on controller actions inputs) is disabled.
            The default value is true.
            </summary>
            <remarks>
            This behavior is configured by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder)"/>
            extension methods.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseThrottling">
            <summary>
            Gets or sets a value indicating whether the API should use throttling.
            The default value is true.
            </summary>
            <remarks>
            This behavior is configured by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingServiceCollectionExtensions.AddThrottling(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>
            extension methods.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureMvcOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureJsonOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureApiBehaviorOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions"/>.
            This delegate will be used only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.DisableModelInvalidResponse"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureApiVersioningOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions"/>.
            This delegate will be used only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseVersioning"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureApiExplorerOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiExplorerOptions"/>.
            This delegate will be used only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseVersioning"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureThrottlingOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions"/>.
            This delegate will be used only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseThrottling"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureClientRateThrottlingOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions"/>.
            This delegate will be used only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseThrottling"/> is true.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.Validate">
            <summary>
            Validates this instance.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The options are invalid.
            </exception>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type
            that allow configuring services for supporting API controllers.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds services for API controllers to the specified service collection.
            This method will configure MVC to correctly use the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>
            and <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> features.
            This method will not register services used by views or pages.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service configures the MVC services for the services used by API controllers.
            It combines the effects of:
            - <see cref="M:Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingServiceCollectionExtensions.AddThrottling(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            To add services for controllers with views call <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions})">
            <summary>
            Adds services for API controllers to the specified service collection using the specified action
            to configure options.
            This method will configure MVC to correctly use the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>
            and <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> features.
            This method will not register services used by views or pages.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service configures the MVC services for the services used by API controllers.
            It combines the effects of:
            - <see cref="M:Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.JsonOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingServiceCollectionExtensions.AddThrottling(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            To add services for controllers with views call <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds services for API controllers and views to the specified service collection.
            This method will configure MVC to correctly use the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>
            and <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> features.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service configures the MVC services for the services used by API controllers.
            It combines the effects of:
            - <see cref="M:Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingServiceCollectionExtensions.AddThrottling(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions})">
            <summary>
            Adds services for API controllers and views to the specified service collection.
            This method will configure MVC to correctly use the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>
            and <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> features.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service configures the MVC services for the services used by API controllers.
            It combines the effects of:
            - <see cref="M:Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.JsonOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingServiceCollectionExtensions.AddThrottling(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/> with custom serialization behavior required by Web API controllers.
            </summary>
            <param name="builder">The builder.</param>
            <returns>>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.JsonOptions})">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/> with custom serialization behavior required by Web API controllers.
            </summary>
            <param name="builder">The builder.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> instance.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.IRouteAnalyzer">
            <summary>
            Defines the interface of a route analyzer.
            A route analyzer allows parsing all the action descriptors configured in MVC.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Routing.IRouteAnalyzer.Analyze">
            <summary>
            Retrieves information about all the routes configured in MVC.
            </summary>
            <returns>
            A list of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo"/> instances retrieved from the action
            descriptors configured in MVC for all routes.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteAnalyzer">
            <summary>
            Defines a default implementation of <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.IRouteAnalyzer"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteAnalyzer.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteAnalyzer"/> class.
            </summary>
            <param name="provider">The action descriptor collection provider.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteAnalyzer.Analyze">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteAnalyzerIEndpointRouteBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to configure the route analyzer.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteAnalyzerIEndpointRouteBuilderExtensions.MapRouteAnalyzer(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)">
            <summary>
            Maps the specified route analyzer route.
            The route will respond to <see cref="P:System.Net.Http.HttpMethod.Get"/> requests an return a JSON containing
            a list of <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo"/> for all the routes configured in MVC.
            </summary>
            <param name="builder">The endpoint route builder instance.</param>
            <param name="route">The route that should be used.</param>
            <returns>
            The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> instance.
            </returns>
            <example>
            This method should be invoked like this:
            <code>
            <![CDATA[
            app.UseEndpoints(
                endpoints =>
                {
                    // (...)
            
                    endpoints.MapRouteAnalyzer();
                });
            app.UseEndpoints(
                endpoints =>
                {
                    // (...)
            
                    endpoints.MapRouteAnalyzer("/my-route");
                });
            ]]>
            </code>
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo">
            <summary>
            Describes a route as parsed by the route analyzer.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo.Path">
            <summary>
            Gets or sets the route path.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo.HttpMethods">
            <summary>
            Gets or sets the HTTP methods.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo.AreaName">
            <summary>
            Gets or sets the route area name.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo.ControllerName">
            <summary>
            Gets or sets the route controller name.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo.ActionName">
            <summary>
            Gets or sets the route action name.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo.PageName">
            <summary>
            Gets or sets the route page name.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteInfo.DisplayName">
            <summary>
            Gets or sets the route display name.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator">
            <summary>
            Defines a validator that can be used in API controllers (<see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>) to validate
            the input arguments of actions.
            </summary>
            <remarks>This validator also considers the validation errors present in the model state.</remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Errors">
            <summary>
            Gets the validation errors.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> class.
            </summary>
            <param name="modelState">The controller model state.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Required(System.String,System.String,System.String)">
            <summary>
            Validates that <paramref name="value"/> is specified.
            </summary>
            <param name="value">The value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Required(System.Guid,System.String,System.String)">
            <summary>
            Validates that <paramref name="value"/> is specified.
            </summary>
            <param name="value">The value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Required(System.Object,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is specified.
            </summary>
            <param name="value">The value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Required``1(System.Collections.Generic.IList{``0},System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is specified.
            </summary>
            <typeparam name="T">The of the items in <paramref name="value"/>.</typeparam>
            <param name="value">The value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Required``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is specified.
            </summary>
            <typeparam name="T">The of the items in <paramref name="value"/>.</typeparam>
            <param name="value">The value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.Double,System.Double,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.Double,System.Double,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.Double,System.Double,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.Double,System.Double,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.RegularExpression(System.String,System.String,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> matches the specified regular expression.
            </summary>
            <param name="value">The value.</param>
            <param name="expression">The regular expression that should be matched.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.MinLength(System.String,System.Int32,System.String,System.String)">
            <summary>
            Validates that <paramref name="value"/> as at least <paramref name="length"/> characters.
            </summary>
            <param name="value">The value.</param>
            <param name="length">The minimum length.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.MaxLength(System.String,System.Int32,System.String,System.String)">
            <summary>
            Validates that <paramref name="value"/> as at most <paramref name="length"/> characters.
            </summary>
            <param name="value">The value.</param>
            <param name="length">The minimum length.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.EqualTo(System.String,System.String,System.String,System.String)">
            <summary>
            Validates that <paramref name="value"/> is equal to <paramref name="expected"/> (ignoring case).
            </summary>
            <param name="value">The value.</param>
            <param name="expected">The expected value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.EqualTo(System.String,System.String,System.StringComparison,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is equal to <paramref name="expected" />.
            </summary>
            <param name="value">The value.</param>
            <param name="expected">The expected value.</param>
            <param name="comparisonType">The type of comparison.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.NotEqualTo(System.String,System.String,System.String,System.String)">
            <summary>
            Validates that <paramref name="value"/> is not equal to <paramref name="expected"/> (ignoring case).
            </summary>
            <param name="value">The value.</param>
            <param name="expected">The expected value.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.NotEqualTo(System.String,System.String,System.StringComparison,System.String,System.String)">
            <summary>
            Validates that <paramref name="value" /> is not equal to <paramref name="expected" />.
            </summary>
            <param name="value">The value.</param>
            <param name="expected">The expected value.</param>
            <param name="comparisonType">The type of comparison.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Check(System.Func{System.Boolean},System.String,System.String)">
            <summary>
            Validates that the specified <paramref name="function"/> returns true.
            </summary>
            <param name="function">The function that should be evaluated.</param>
            <param name="errorCode">The code of the error that should be added if the validation fails.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Result(System.String,System.String,Primavera.Hydrogen.Rest.ServiceError@)">
            <summary>
            Returns the result of the validation.
            </summary>
            <param name="errorCode">The code of the main error that should be returned if there are validation errors.</param>
            <param name="errorDescription">The description of the main error that should be returned if there are validation errors.</param>
            <param name="serviceError">The resulting <see cref="T:Primavera.Hydrogen.Rest.ServiceError"/> that includes all the validation errors.</param>
            <returns>
            True if there are no errors (<paramref name="serviceError"/> is null).
            False if there is at least one error (<paramref name="serviceError"/> describes the errors found).
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult">
            <summary>
            Describes the model state validation result returned by a API controller (<see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/> and/or
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/>) when the input model has validation errors.
            </summary>
            <remarks>
            When a controller (<see cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>) is annotated with the <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/>
            (which is the case of all controllers that derive from <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>) the MVC
            infrastructure will automatically validate input models. When <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressModelStateInvalidFilter"/> is false,
            if any validation error is found, a <see cref="F:System.Net.HttpStatusCode.BadRequest"/> response is returned, including a JSON in the content
            that describes the errors.
            This class can be used to deserialize that response content as it is equivalent to <see cref="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails"/>.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.Type">
            <summary>
            Gets or sets the response type.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.Status">
            <summary>
            Gets or sets the status code.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.TraceId">
            <summary>
            Gets or sets the trace id.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.Errors">
            <summary>
            Gets or sets the errors.
            This is dictionary where the key is the field that caused the error and
            the value is a list containing the error messages.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> type to configure
            validation behaviors.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions"/> with <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressModelStateInvalidFilter"/> set
            as true by default to prevent the API controller from returning <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> when the model
            state is invalid.
            </summary>
            <param name="builder">The MVC builder.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> instance.
            </returns>
            <remarks>
            This behavior is required so that <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> can be used to validate the actions input
            arguments. Otherwise, a response will be returned before the action code executes.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions"/> with <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressModelStateInvalidFilter"/> set
            as true by default to prevent the API controller from returning <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> when the model
            state is invalid.
            </summary>
            <param name="builder">The MVC builder.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> instance.
            </returns>
            <remarks>
            This behavior is required so that <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> can be used to validate the actions input
            arguments. Otherwise, a response will be returned before the action code executes.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type to
            configure API versioning services.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)">
            <summary>
            Adds the API versioning service to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="defaultVersion">The API default version. This is the version that should be applied to the actions that do not specify an explicit API version.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            For more information about the API versioning service <see href="https://github.com/Microsoft/aspnet-api-versioning/"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions})">
            <summary>
            Adds the API versioning service to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="defaultVersion">The API default version. This is the version that should be applied to the actions that do not specify an explicit API version.</param>
            <param name="configureApiVersioningDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            For more information about the API versioning service <see href="https://github.com/Microsoft/aspnet-api-versioning/"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiExplorerOptions})">
            <summary>
            Adds the API versioning service to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="defaultVersion">The API default version. This is the version that should be applied to the actions that do not specify an explicit API version.</param>
            <param name="configureAplExplorerDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            For more information about the API versioning service <see href="https://github.com/Microsoft/aspnet-api-versioning/"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions},System.Action{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiExplorerOptions})">
            <summary>
            Adds the API versioning service to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="defaultVersion">The API default version. This is the version that should be applied to the actions that do not specify an explicit API version.</param>
            <param name="configureApiVersioningDelegate">The API versioning configuration delegate.</param>
            <param name="configureAplExplorerDelegate">The API explorer configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            For more information about the API versioning service <see href="https://github.com/Microsoft/aspnet-api-versioning/"/>.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.CustomErrorResponseProvider">
            <summary>
            Provides a custom <see cref="T:Microsoft.AspNetCore.Mvc.Versioning.IErrorResponseProvider"/>, used by the API versioning
            middleware, to return <see cref="T:Primavera.Hydrogen.Rest.ServiceError"/> instances on errors.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Versioning.DefaultErrorResponseProvider" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.CustomErrorResponseProvider.CreateErrorContent(Microsoft.AspNetCore.Mvc.Versioning.ErrorResponseContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.OpenApi.Schema.NoTitleFromDisplayNameOpenApiSchemaGenerator">
            <summary>
            Overrides the default behavior of <see cref="T:NSwag.Generation.OpenApiSchemaGenerator"/> by removing
            the title property from each schema.
            </summary>
            <seealso cref="T:NSwag.Generation.OpenApiSchemaGenerator" />
            <remarks>
            The default schema generator uses the <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/> in properties
            to set the schema title. When this attribute is defined using resource types, this
            results in the title being set to resource name, not the value. Is it better to
            remove the title entirely.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.OpenApi.Schema.NoTitleFromDisplayNameOpenApiSchemaGenerator.#ctor(NJsonSchema.Generation.JsonSchemaGeneratorSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.OpenApi.Schema.NoTitleFromDisplayNameOpenApiSchemaGenerator"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.OpenApi.Schema.NoTitleFromDisplayNameOpenApiSchemaGenerator.ApplyDataAnnotations(NJsonSchema.JsonSchema,NJsonSchema.Generation.JsonTypeDescription)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Error_InputInvalid">
            <summary>
              Looks up a localized string similar to The input is invalid..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Error_RouteAnalyzer_CouldNotAnalyzeConfiguration">
            <summary>
              Looks up a localized string similar to There was an error analyzing the configuration..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Error_RouteAnalyzer_CouldNotAnalyzeRoutes">
            <summary>
              Looks up a localized string similar to There was an error analyzing the routes..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_BackgroundServiceQueueNotSet">
            <summary>
              Looks up a localized string similar to The queue instance is not set..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_BackgroundServiceWorkerNotSet">
            <summary>
              Looks up a localized string similar to The background worker instance is not set..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_InvalidApiControllerOptions_DefaultApiVersion_Required">
            <summary>
              Looks up a localized string similar to Since API versioning is enabled, the default API version is required..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_ThrottlingBuilderNotConfigured">
            <summary>
              Looks up a localized string similar to Cannot use throttling. The throttling builder was not configured..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Throttling_DefaultAnonymousNotAllowedMessage">
            <summary>
              Looks up a localized string similar to Anomymous calls are not allowed. Client identifier was not set..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Throttling_DefaultQuotaExceededMessage">
            <summary>
              Looks up a localized string similar to Calls quota exceeded. The maximum admitted is {0} per {1}..
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions">
            <summary>
            Defines the configuration options used by the client rate throttling middleware.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.DefaultCountersCachePrefix">
            <summary>
            Defines the default value for <see cref="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.CountersCachePrefix"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.GeneralRules">
            <summary>
            Gets or sets the general rules.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.ClientRules">
            <summary>
            Gets or sets the client-specific rules.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.StackBlockedRequests">
            <summary>
            Gets or sets a value indicating whether all requests, including the rejected ones,
            should be stacked in this order: day, hour, min, sec.
            The default value is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.QuotaExceededStatusCode">
            <summary>
            Gets or sets the status code that should be returned when the rate limits are exceeded.
            The default value is 429.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.QuotaExceededMessage">
            <summary>
            Gets or sets the message that should be sent when the rate limits are exceeded.
            If no value is defined, a default message will be sent.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.EnableRateLimitHeaders">
            <summary>
            Gets or sets a value indicating whether X-Rate-Limit and Retry-After headers
            should be sent when rate limits are exceeded.
            The default value is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.ClientIdHeaders">
            <summary>
            Gets or sets the names of the headers that may convey the client identifier.
            The headers will be inspected in the specified order. But only if none of
            the <see cref="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.ClientIdClaims"/> is found.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.ClientIdClaims">
            <summary>
            Gets or sets the names of the identity claims that may convey the client identifier.
            The claims will be inspected in the specified order. If no claim is found, then
            the headers will be inspected.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.CountersCacheKind">
            <summary>
            Gets or sets the kind of counters cache used by client rate throttling.
            The default value is <see cref="F:Primavera.Hydrogen.AspNetCore.Throttling.CountersCacheKind.DistributedMemory"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.CountersCachePrefix">
            <summary>
            Gets or sets the prefix used to store counters in the cache.
            The default value is <see cref="F:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.DefaultCountersCachePrefix"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions"/> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.CountersCacheKind">
            <summary>
            Specifies the kind of counters cache used by client rate throttling.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Throttling.CountersCacheKind.Memory">
            <summary>
            The cache stores counters in memory.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Throttling.CountersCacheKind.DistributedMemory">
            <summary>
            The cache stores counters in distributed memory.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder">
            <summary>
            Defines the interface of the throttling builder.
            The throttling builder allows configuring the throttling components.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder.Services">
            <summary>
            Gets the services.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder.MiddlewareType">
            <summary>
            Gets the type of the middleware.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder.AddMiddleware``1">
            <summary>
            Adds a throttling middleware.
            </summary>
            <typeparam name="TMiddleware">The type of the throttling middleware.</typeparam>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder.AddHandler``1">
            <summary>
            Adds a throttling handler.
            </summary>
            <typeparam name="THandler">The type of the throttling handler.</typeparam>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder.AddClientRateHandler">
            <summary>
            Adds a throttling handler that limits requests based on client rate.
            </summary>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/> instance.
            </returns>
            <remarks>
            Client-rate limiting means that requests will be allowed to pass through until
            a given limit is reached for a given time interval.
            The limit and the time interval for a request will be determined at runtime
            by applying the rules defines in the options for the request endpoint and the
            request client identifier.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder.AddClientRateHandler(System.Action{Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions})">
            <summary>
            Adds a throttling handler that limits requests based on client rate.
            </summary>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/> instance.
            </returns>
            <remarks>
            Client-rate limiting means that requests will be allowed to pass through until
            a given limit is reached for a given time interval.
            The limit and the time interval for a request will be determined at runtime
            by applying the rules defines in the options for the request endpoint and the
            request client identifier.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder.AddCountersStore``2">
            <summary>
            Adds the specified counters store.
            </summary>
            <typeparam name="TStore">The type of the counters store interface.</typeparam>
            <typeparam name="TImplementation">The type of the counters store implementation.</typeparam>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingApplicationBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> type
            used to initialize the throttling components.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingApplicationBuilderExtensions.UseThrottling(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the throttling middleware components to the application.
            </summary>
            <param name="builder">The application builder.</param>
            <returns>
            The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> instance.
            </returns>
            <exception cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingException">
            Raised if <see cref="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingApplicationBuilderExtensions.UseThrottling(Microsoft.AspNetCore.Builder.IApplicationBuilder)"/> is called without <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/>
            being registered before in the service collection (<see cref="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingServiceCollectionExtensions.AddThrottling(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>).
            </exception>
            <remarks>
            This should be called after <see cref="M:Microsoft.AspNetCore.Builder.AuthAppBuilderExtensions.UseAuthentication(Microsoft.AspNetCore.Builder.IApplicationBuilder)"/> (when client authentication
            is in place) and before <see cref="M:Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IEndpointRouteBuilder})"/>).
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder">
            <summary>
            Provides a default implementation of <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/>.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder.Services">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder.MiddlewareType">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder"/> class.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder.AddMiddleware``1">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder.AddHandler``1">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder.AddClientRateHandler">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder.AddClientRateHandler(System.Action{Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions})">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingBuilder.AddCountersStore``2">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions">
            <summary>
            Defines the options used to configure the throttling components.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions.Enabled">
            <summary>
            Gets or sets a value indicating whether throttling is enabled.
            The default value is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions.AllowAnonymous">
            <summary>
            Gets or sets a value indicating whether anonymous requests are allowed.
            A request is anonymous if the throttling condition (e.g. the client id)
            is not defined.
            The default value is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions.AnonymousNotAllowedMessage">
            <summary>
            Gets or sets the message that should be sent when an anonymous request is not allowed.
            If no value is defined, a default message will be sent.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions"/> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type
            used to configure dependency injection for the throttling components.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingServiceCollectionExtensions.AddThrottling(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/> to configure the throttling components.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingServiceCollectionExtensions.AddThrottling(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions})">
            <summary>
            Creates a new <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/> to configure the throttling components.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingBuilder"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingHandler">
            <summary>
            Defines the interface of a throttling handler.
            A throttling handler is invoked by the throttling middleware to process
            incoming requests and apply throttling based on some criteria.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingHandler.HandleAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Handles the specified request and applies throttling.
            </summary>
            <param name="context">The context that corresponds to the incoming request.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.
            A value indicating whether the request was blocked by this handler.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingMiddleware">
            <summary>
            Defines the interface of a middleware that applies throttling to requests.
            The middleware is registered in the ASP.NET Core middleware pipeline to
            process requests by invoking all the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingHandler"/> handlers.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Http.IMiddleware" />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler">
            <summary>
            Defines a throttling handler that implements client-rate limiting.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingHandler" />
            <remarks>
            Client-rate limiting means that requests will be allowed to pass through until
            a given limit is reached for a given time interval.
            The limit and the time interval for a request will be determined at runtime
            by applying the rules defines in the options for the request endpoint and the
            request client identifier.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.#ctor(Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore,Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions,Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions,Microsoft.Extensions.Logging.ILogger{Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler"/> class.
            </summary>
            <param name="store">The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore"/> instance.</param>
            <param name="options">The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions"/> instance.</param>
            <param name="clientRateOptions">The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ClientRateThrottlingOptions"/> instance..</param>
            <param name="logger">The logger instance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.HandleAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.SetIdentity(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Sets the identity of the current request.
            </summary>
            <param name="context">The context.</param>
            <returns>
            The request identity.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.GetIdentityClientId(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the client identifier from the current request.
            </summary>
            <param name="context">The context.</param>
            <returns>
            The client identifier.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.GetIdentityHttpVerb(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the HTTP verb from the current request.
            </summary>
            <param name="context">The context.</param>
            <returns>
            The HTTP verb.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.GetIdentityPath(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the path from the current request.
            </summary>
            <param name="context">The context.</param>
            <returns>
            The path.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.ReturnAnonymousNotAllowedResponseAsync(Microsoft.AspNetCore.Http.HttpContext,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity)">
            <summary>
            Returns a quota exceeded response as the result of the current request being anonymous.
            </summary>
            <param name="context">The context.</param>
            <param name="identity">The request identity.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.ReturnQuotaExceededResponseAsync(Microsoft.AspNetCore.Http.HttpContext,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitCounter,System.String)">
            <summary>
            Returns a quota exceeded response as the result of at least one rate limit being exceeded.
            </summary>
            <param name="context">The context.</param>
            <param name="identity">The request identity.</param>
            <param name="rule">The rule that was exceeded.</param>
            <param name="counter">The rate limit counter.</param>
            <param name="retryAfter">The value that should be sent in the Retry-After header (if rate limit headers are enabled).</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.GetMatchingRules(Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity)">
            <summary>
            Gets the rules that apply to the specified request identity.
            </summary>
            <param name="identity">The request identity.</param>
            <returns>
            The list of rules that should be applied to the specified request identity.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.ProcessRequestCounter(Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule)">
            <summary>
            Processes the counter for the specified request identity and the specified rule.
            </summary>
            <param name="identity">The request identity.</param>
            <param name="rule">The rule.</param>
            <returns>
            The counter for the specified request identity and the specified rule.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.GetRetryAfterText(System.DateTime,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule)">
            <summary>
            Returns the string that should be added to the Retry-After header for the specified rule.
            </summary>
            <param name="timestamp">The time.</param>
            <param name="rule">The rule.</param>
            <returns>
            The string that should be added to the Retry-After header for the specified rule.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRateThrottlingHandler.GetRateLimitHeaders(Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule)">
            <inheritdoc />
            <summary>
            Gets the values that should be added to the rate limit headers for the specified request identity and 
            the specified rule.
            </summary>
            <param name="identity">The client identity.</param>
            <param name="rule">The rule.</param>
            <returns>
            The values that should be added to the rate limit headers for the specified request identity and 
            the specified rule.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity">
            <summary>
            Describes the identity of a client request.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity.HttpVerb">
            <summary>
            Gets or sets the HTTP verb of the request.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity.Path">
            <summary>
            Gets or sets the path of the request.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity"/> class.
            </summary>
            <param name="clientId">The client identifier.</param>
            <param name="httpVerb">The HTTP verb of the request.</param>
            <param name="path">The path of the request.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientRequestIdentity.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientSpecificRateLimitRule">
            <summary>
            Defines the rules to apply throttling base on rate limits to a specific client.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientSpecificRateLimitRule.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientSpecificRateLimitRule.Rules">
            <summary>
            Gets or sets the rules.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientSpecificRateLimitRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientSpecificRateLimitRule"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientSpecificRateLimitRule.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.ClientSpecificRateLimitRule"/> class.
            </summary>
            <param name="clientId">The client identifier.</param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitCounter">
            <summary>
            Describes a counter used to apply throttling.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitCounter.Timestamp">
            <summary>
            Gets or sets the timestamp of the last request received.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitCounter.TotalRequests">
            <summary>
            Gets or sets the total requests received.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitCounter.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitHeaders">
            <summary>
            Describes the rate limit headers.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitHeaders.Context">
            <summary>
            Gets or sets the current HTTP context.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitHeaders.Limit">
            <summary>
            Gets or sets the value of the limit header.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitHeaders.Remaining">
            <summary>
            Gets or sets the value of the remaining header.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitHeaders.Reset">
            <summary>
            Gets or sets the value of the reset header.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitHeaders.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule">
            <summary>
            Defines a rule to apply throttling base on rate limits.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule.Endpoint">
            <summary>
            Gets or sets the endpoint to which the rule should be applied to.
            </summary>
            <remarks>
            If the value is * then the rule will be applied to any endpoint.
            Values should be in the form: [HttpVerb]:[Path]
            Glob pattern matching is supported (e.g. *:/api/*/customers).
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule.Period">
            <summary>
            Gets or sets the throttling period.
            This is the ammount of time that the specified <see cref="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule.Limit"/> cannot
            be exceeeded for the specified client id, client IP and/or endpoint.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule.Limit">
            <summary>
            Gets or sets the maximum number of requests that can be made during the
            specified <see cref="P:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule.Period"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule.#ctor(System.String,System.TimeSpan,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule"/> class.
            </summary>
            <param name="endpoint">The endpoint.</param>
            <param name="period">The period.</param>
            <param name="limit">The limit.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitRule.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.ICountersStore">
            <summary>
            Defines the interface of a store that records counters used in throttling.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.DistributedMemoryRateLimitsCountersStore">
            <summary>
            Provides a default implementation of <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore"/> that
            stores data in a distributed memory cache.
            This implementation uses the implementation of <see cref="T:Microsoft.Extensions.Caching.Distributed.IDistributedCache"/>
            previously registered.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.DistributedMemoryRateLimitsCountersStore.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.DistributedMemoryRateLimitsCountersStore" /> class.
            </summary>
            <param name="cache">The cache instance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.DistributedMemoryRateLimitsCountersStore.ClearCounters">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.DistributedMemoryRateLimitsCountersStore.GetCounter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.DistributedMemoryRateLimitsCountersStore.SetCounter(System.String,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitCounter,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore">
            <summary>
            Defines the interface of a store that records rate limit counters.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore.GetCounter(System.String)">
            <summary>
            Gets the counter that matches the specified identifier.
            </summary>
            <param name="id">The counter identifier.</param>
            <returns>The counter that matches the specified identifier.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore.SetCounter(System.String,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitCounter,System.TimeSpan)">
            <summary>
            Sets the specified counter.
            </summary>
            <param name="id">The counter identifier.</param>
            <param name="counter">The counter.</param>
            <param name="expirationTime">The counter expiration time.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore.ClearCounters">
            <summary>
            Clears all the counters.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.MemoryRateLimitsCountersStore">
            <summary>
            Provides a default implementation of <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore"/> that
            stores data in a memory cache.
            This implementation uses the implementation of <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache"/>
            previously registered.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.IRateLimitCountersStore" />
            <remarks>
            Note that this store should not be used in the production environments when using server farms
            because the counters will not be shared between nodes.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.MemoryRateLimitsCountersStore.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.MemoryRateLimitsCountersStore" /> class.
            </summary>
            <param name="cache">The cache instance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.MemoryRateLimitsCountersStore.GetCounter(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.MemoryRateLimitsCountersStore.SetCounter(System.String,Primavera.Hydrogen.AspNetCore.Throttling.RateLimit.RateLimitCounter,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.MemoryRateLimitsCountersStore.ClearCounters">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.MemoryRateLimitsCountersStore.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.Stores.RateLimit.MemoryRateLimitsCountersStore.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingConstants">
            <summary>
            Defines constants used by the throttling components.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingConstants.AnonymousClientId">
            <summary>
            The constant that is used as the client identifier when the client id cannot be retrived from the request.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingConstants.RetryAfterHeaderName">
            <summary>
            The name of the retry-after header.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingConstants.XRateLimitLimitHeaderName">
            <summary>
            The name of the x-rate-limit-limit header.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingConstants.XRateLimitRemainingHeaderName">
            <summary>
            The name of the x-rate-limit-remaining header.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingConstants.XRateLimitResetHeaderName">
            <summary>
            The name of the x-rate-limit-reset header.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingConstants.XClientIdHeaderName">
            <summary>
            The name of the X-ClientId header.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingException">
            <summary>
            Represents errors raised by throttling components.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingException" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingMiddleware">
            <summary>
            Provides a default implementation of <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingMiddleware"/>.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingMiddleware" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingMiddleware.#ctor(System.Collections.Generic.IEnumerable{Primavera.Hydrogen.AspNetCore.Throttling.IThrottlingHandler},Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions,Microsoft.Extensions.Logging.ILogger{Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingMiddleware})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingMiddleware"/> class.
            </summary>
            <param name="handlers">The handlers that should be invoked.</param>
            <param name="options">The <see cref="T:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingOptions"/> instance.</param>
            <param name="logger">The logger instance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Throttling.ThrottlingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Called when a new request is available for processing.
            </summary>
            <param name="context">The context.</param>
            <param name="next">The next middleware in the pipeline.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
        </member>
    </members>
</doc>
